<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Compass</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
        crossorigin="anonymous"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>


    <link href="stylesheets/secondary.css" rel="stylesheet">
    <link href="stylesheets/index.css" rel="stylesheet">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
</head>

<body>



    <nav id="sidebarMenu" class="col-md-2 col-lg-2 d-md-block sidebar">
        <div class="position-sticky">

            <h3 id="sidebar-main-header" class="d-flex align-items-center px-3 pb-3">
                <a id="header-link" class="nounderline" href="/"><span><i class="fa fa-compass"></i>
                        Compass</span></a>
            </h3>


            <div class="card">
                <div class="card-body align-items-center">
                    <h5 class="d-flex justify-content-center align-items-center px-5">
                        <span>User List</span>
                        <hr>
                    </h5>



                    <ul class="nav flex-column">
                        <% for (let user of users) { %>
                            <a id="<%= user.id %>" href="#" class="username-link nounderline ml-3 py-1"
                                aria-expanded="false" onclick="return displayUserTours(this.id);">
                                <div class="card user-card">
                                    <div class="card-body user-card-body">
                                        <li class="nav-item mb-1">

                                            <%= user.username %>

                                        </li>
                                    </div>
                                </div>
                            </a>

                            <% } %>
                </div>
                </ul>
            </div>

            <br>

            <a id="all-tours-link" href="#" class="nounderline nav-link ml-3" aria-expanded="false"
                onclick="return displayAllTours();">
                <div id="all-tours-card" class="card text-white bg-success justify-content-center align-items-center">
                    <div id="all-tours-card-body" class="card-body all-tours-card-body">
                        Show All Tours
                    </div>
                </div>
            </a>



        </div>
    </nav>



    <div id="map-box">
        <div id="map"></div>
    </div>

    <div id="user-info" class="mt-4">
        Select a user from the list to display tour info.
    </div>






    <script>
        const allUsers = <%- JSON.stringify(users) %>
        const markerIcons = [
            'http://maps.google.com/mapfiles/ms/icons/yellow.png',
            'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/blue.png',
            'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/green.png',
            'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/orange.png',
            'http://maps.google.com/mapfiles/ms/icons/orange-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/pink.png',
            'http://maps.google.com/mapfiles/ms/icons/pink-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/purple.png',
            'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
            'http://maps.google.com/mapfiles/ms/icons/red.png',
            'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
        ]
    </script>





    <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.24.1/feather.min.js"
        integrity="sha384-EbSscX4STvYAC/DxHse8z5gEDaNiKAIGW+EpfzYTfQrgIlHywXXrM9SUIZ0BlyfF"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"
        integrity="sha384-i+dHPTzZw7YVZOx9lbH5l6lP74sLRtMtwN2XjVqjf3uAGAREAF4LMIUDTWEVs4LI"
        crossorigin="anonymous"></script>
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script
        src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsKey %>&callback=displayAllTours&libraries=&v=weekly"
        async>
        </script>
    <script src="https://code.jquery.com/jquery-latest.min.js"></script>

    <script>

        function initMap() {
            let map;
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 39.67310608025676, lng: 20.855661058932768 },
                zoom: 18
            });
        }

        function displayAllTours() {
            let map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 39.67310608025676, lng: 20.855661058932768 },
                zoom: 17
            });
            var infoWindow = new google.maps.InfoWindow();

            for (let user of allUsers) {
                let randomNumber = Math.floor(Math.random() * 14) + 1;

                if (user.measurements) {
                    for (let measurement of user.measurements) {

                        let date = measurement.createdAt.slice(0, 10);
                        let time = measurement.createdAt.slice(11, 19);

                        var marker = new google.maps.Marker({
                            position: { lat: parseFloat(measurement.xHatNew[0]), lng: parseFloat(measurement.xHatNew[1]) },
                            title: `${user.username}'s position on:\n${date}, ${time}`,
                            icon: markerIcons[randomNumber - 1]
                        });
                        google.maps.event.addListener(marker, 'click', function () {
                            infoWindow.setContent(this.get('title'));
                            infoWindow.open(map, this);
                        });
                        marker.setMap(map);
                    }
                }
            }

            document.getElementById('user-info').innerHTML = 'Currently showing tour info for all users'
            let userCards = document.getElementsByClassName('user-card');
            for (let card of userCards) card.style.backgroundColor = "#e3fdfd";
            document.getElementById('all-tours-card').className = "card text-white bg-secondary justify-content-center align-items-center";

        }

        function displayUserTours(id) {
            for (let user of allUsers) {
                let hasActiveTour = true;

                if (user._id == id) {
                    if (user.measurements.length) {
                        let map = new google.maps.Map(document.getElementById("map"), {
                            center: { lat: parseFloat(user.measurements[0].xHatNew[0]), lng: parseFloat(user.measurements[0].xHatNew[1]) },
                            zoom: 18
                        });
                        var infoWindow = new google.maps.InfoWindow();

                        for (let measurement of user.measurements) {

                            let date = measurement.createdAt.slice(0, 10);
                            let time = measurement.createdAt.slice(11, 19);

                            var marker = new google.maps.Marker({
                                position: { lat: parseFloat(measurement.xHatNew[0]), lng: parseFloat(measurement.xHatNew[1]) },
                                map,
                                title: `${user.username}'s position on:\n${date}, ${time}`
                            });

                            google.maps.event.addListener(marker, 'click', function () {
                                infoWindow.setContent(this.get('title'));
                                infoWindow.open(map, this);
                            });

                        }

                    } else {
                        initMap();
                        hasActiveTour = false;
                    }
                    document.getElementById('user-info').innerHTML = `${hasActiveTour ? 'Currently showing tour info for user: ' : 'No active tours found for user: '} ${user.username}`
                    let userCards = document.getElementsByClassName('user-card');
                    for (let card of userCards) card.style.backgroundColor = "#e3fdfd";
                    document.getElementById(id).children[0].style.backgroundColor = "rgb(255, 181, 112)";
                    document.getElementById('all-tours-card').className = "card text-white bg-success justify-content-center align-items-center";

                    let theUser;
                    $.ajax({
                        method: "GET",
                        url: `http://localhost:3000/${user._id}`
                    })
                        .done(function (msg) {
                            console.log(msg);
                            // alert("Data Saved: " + msg);
                        });

                }
            }
        }


    </script>

</body>

</html>