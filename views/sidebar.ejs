<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Compass</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <link rel="stylesheet" href="stylesheets/index.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
        crossorigin="anonymous"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>





    <!-- Custom styles for this template -->
    <link href="stylesheets/sidebar.css" rel="stylesheet">
</head>

<body>


    <div class="container-flex">

        <nav id="sidebarMenu" class="col-md-2 col-lg-2 d-md-block sidebar collapse">
            <div class="position-sticky">
                <h5 class="sidebar-heading d-flex justify-content-between align-items-center px-3 text-muted">
                    <span>USERS</span>
                </h5>
                <hr>

                <ul class="nav flex-column">
                    <% for (let user of users) { %>

                        <li class="nav-item mb-1 px-3">
                            <a href="#" class="nounderline ml-3" data-toggle="dropdown" aria-expanded="false">
                                <%= user.username %>
                            </a>
                        </li>

                        <% } %>

                </ul>



            </div>
        </nav>
    </div>

    <div class="container-flex ">
        <h1>All Tours</h1>
        <div id="map"></div>

        <div id="user-info">
            <% for (let user of users) { %>
                <h2>
                    User: <%= user.username%>
                </h2>
                <% if (user.measurements) { %>
                    <h3>
                        Last Tour:
                    </h3>
                    <% for (let measurement of user.measurements) { %>

                        <h4>Measurement <%= user.measurements.indexOf(measurement) + 1 %>:</h4>
                        <h5>
                            X: <%= measurement.xHatNew[0] %>
                        </h5>

                        <h5>
                            Y: <%= measurement.xHatNew[1] %>
                        </h5>

                        <% } %>
                            <% } %>
                                <br>
                                <hr>
                                <% } %>


        </div>
    </div>

    <script>
        const allUsers = <%- JSON.stringify(users) %>
    </script>






    <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.24.1/feather.min.js"
        integrity="sha384-EbSscX4STvYAC/DxHse8z5gEDaNiKAIGW+EpfzYTfQrgIlHywXXrM9SUIZ0BlyfF"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"
        integrity="sha384-i+dHPTzZw7YVZOx9lbH5l6lP74sLRtMtwN2XjVqjf3uAGAREAF4LMIUDTWEVs4LI"
        crossorigin="anonymous"></script>
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsKey %>&callback=initMap&libraries=&v=weekly"
        async></script>

    <script>



            function initMap() {
                let map;
                map = new google.maps.Map(document.getElementById("map"), {
                    center: { lat: 39.6655, lng: 20.8559 },
                    zoom: 12
                });

                var marker = new google.maps.Marker({
                    position: { lat: 39.669213148512505, lng: 20.8517165405187 },
                    title: `measurement.createdAt`
                });

                google.maps.event.addListener(marker, 'click', function () {
                    infoWindow.setContent(this.get('title'));
                    infoWindow.open(map, this);
                });

                marker.setMap(map);

                for (let user of allUsers) {

                    if (user.measurements) {
                        for (let measurement of user.measurements) {

                            var marker = new google.maps.Marker({
                                position: { lat: parseFloat(measurement.xHatNew[0]), lng: parseFloat(measurement.xHatNew[1]) },
                                title: `measurement.createdAt`
                            });

                            google.maps.event.addListener(marker, 'click', function () {
                                infoWindow.setContent(this.get('title'));
                                infoWindow.open(map, this);
                            });

                            marker.setMap(map);
                        }
                    }
                }
            }


    </script>

</body>

</html>